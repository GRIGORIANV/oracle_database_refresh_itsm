---
- hosts: db_servers
  become: yes
  gather_facts: True

  vars:
    ora_user: oracle
    ora_group1: dba
    ora_group2: oinstall
    ora_s3_scratchpad: "/mnt/hgfs/Linux_share/scratchpad/s3"

  tasks:

  - debug: var=ansible_distribution

  - name: Confirm Local Facts for Each RDS Oracle Instance being Refreshed from a PROD Schema | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    debug: var=ansible_local

##  - name: Verify with ServiceNow ITSM the Refresh Task is Scheduled for Now, Has Been Approved and is in Implementation State | prepare oracle_database_refresh
##    template:
##        src: /etc/ansible/templates/oggca.rsp.j2
##        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
##        owner: oracle
##        group: oinstall
##        mode: '0775'

  - name: Check if Lockfile Exists or an Earlier Refresh Still Running | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    stat:
      path: "{{ ora_s3_scratchpad }}/lockfile_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    register: file_status

  - name: Create Lockfile if Doesnt Exist | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    ansible.builtin.file:
      path: "{{ ora_s3_scratchpad }}/lockfile_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
      state: touch
      mode: '0644'
    when: not file_status.stat.exists

  - name: Generate Local SOURCE Db Export ParFile from a Centralized JINJA Refresh Template | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    ansible.builtin.template:
      src: templates/expdp_parfile.par.j2
      dest: "{{ ora_s3_scratchpad }}/parfile_export_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.par"
    when: not file_status.stat.exists

  - name: Export Source Schema to Scratchpad Usng the Custom Parfile | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    shell: "expdp parfile={{ ora_s3_scratchpad }}/parfile_export_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.par > {{ ora_s3_scratchpad }}/log_export_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.log" 
    environment:
      ORACLE_SID: "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}"
      ORACLE_HOME: "{{ ansible_local.export.localfacts.export_fact_rdbms_home }}"
      LD_LIBRARY_PATH: "{{ ansible_local.export.localfacts.export_fact_rdbms_home }}/lib"
      PATH: "/usr/sbin:/usr/local/bin:/usr/bin:{{ ansible_local.export.localfacts.export_fact_rdbms_home }}/bin"
      become: true
      become_method: su
      become_user: oracle
    when: ansible_local.export.localfacts.export_fact_oracle_database_environment_purpose == "PROD"
    register: exp_details

  # Block to Create Directories

  - name: Generate One or More Target Schema Refresh ParFiles from a Centralized JINJA Refresh Template | prepare oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    ansible.builtin.template:
      src: templates/impdp_parfile.par.j2
      dest: "{{ ora_s3_scratchpad }}/parfile_import_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.par"
    when: ansible_local.export.localfacts.export_fact_oracle_database_environment_purpose == "UAT"

  - name: Import into the Destination Db Usng the Custom Import ParFile | execute oracle_database_refresh of the "{{ ansible_local.export.localfacts.export_fact_schema }}" schema in the "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}" Database on "{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}"
    shell: "impdp parfile={{ ora_s3_scratchpad }}/parfile_import_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.par > {{ ora_s3_scratchpad }}/log_import_{{ ansible_local.export.localfacts.export_fact_oracle_local_hostname }}_{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}_{{ ansible_local.export.localfacts.export_fact_schema }}.log" 
    environment:
      ORACLE_SID: "{{ ansible_local.export.localfacts.export_fact_oracle_sid_name }}"
      ORACLE_HOME: "{{ ansible_local.export.localfacts.export_fact_rdbms_home }}"
      LD_LIBRARY_PATH: "{{ ansible_local.export.localfacts.export_fact_rdbms_home }}/lib"
      PATH: "/usr/sbin:/usr/local/bin:/usr/bin:{{ ansible_local.export.localfacts.export_fact_rdbms_home }}/bin"
      become: true
      become_method: su
      become_user: oracle
    when: ansible_local.export.localfacts.export_fact_oracle_database_environment_purpose == "UAT"
    register: imp_details

#  - name: Generate a Consistent SOURCE Schema Export File | execute oracle_database_refresh
#    ansible.builtin.shell: "{{ ansible_local.ogg.ogg_fact_general.ogg_fact_home }}/bin/oggca.sh -silent -responseFile  /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp"
#    become: true
#    become_user: "{{ ora_user }}"
#    tags: ogg_deployment

#  - name: Verify the Integrity of the SOURCE Export File and the Export Log for Errors | execute oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Copy the SOURCE Export FIle to the Shared Oracle Scratchpad | excute execute oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Verify the Copied SOURCE Export File is Intact After Copying | execute oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Generate a Pre-Refresh AWS Snapshot in the TARGET Db | execute oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Verify the Integrity of the Pre-Refresh Oracle RDS Snapshot | execute oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Refresh the TARGET Db Schema with the PROD Export File Using the Import ParFile from the JINJA Template | execute oracle_database_refresh
#    ansible.builtin.shell: "{{ ansible_local.ogg.ogg_fact_general.ogg_fact_home }}/bin/oggca.sh -silent -responseFile  /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp"
#    become: true
#    become_user: "{{ ora_user }}"
#    tags: ogg_deployment

#  - name: Verify the Integrity of the TARGET Db Schema and the Import Log for Errors | verify oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Remove Lockfile to Let Subsequent Refreshes Know You are Done and They May Proceed | cleanup oracle_database_refresh
#    ansible.builtin.shell: "{{ ansible_local.ogg.ogg_fact_general.ogg_fact_home }}/bin/oggca.sh -silent -responseFile  /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp"
#    become: true
#    become_user: "{{ ora_user }}"
#    tags: ogg_deployment

#  - name: Close the Ticket as Completed Succesfully  | rollback oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

## +++++++++++++++CONDITIONAL - IF REFRESH FAILS, THEN ROLLBACK THE TARGET DB TO THE PRE-SNAPSHOT STATE
#  - name: Revert the TARGET Db to the Pre-Refresh State if Errors are Fatal  | rollback oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'

#  - name: Close the Ticket as Failed, Upload the Failed Import or Export Logs to ServiceNow  | rollback oracle_database_refresh
#    template:
#        src: /etc/ansible/templates/oggca.rsp.j2
#        dest: /tmp/ogg_add_depl_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_version }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_bu_name }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_environment_type }}_{{ ansible_local.ogg.ogg_fact_general.ogg_fact_next_depl_iterator }}.rsp
#        owner: oracle
#        group: oinstall
#        mode: '0775'


  

  





